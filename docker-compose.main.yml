# Copyright (c) 2022, 2023 Humanitarian OpenStreetMap Team
# This file is part of FMTM.
#
#     FMTM is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     FMTM is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with FMTM.  If not, see <https:#www.gnu.org/licenses/>.
#

name: fmtm-main

volumes:
  fmtm_frontend:
    name: fmtm-frontend-main
  fmtm_db_data:
    name: fmtm-db-data-main
  fmtm_data:
    name: fmtm-s3-data-main
  fmtm_logs:
    name: fmtm-logs-main
  fmtm_images:
    name: fmtm-images-main
  fmtm_tiles:
    name: fmtm-tiles-main
  certs:
    name: fmtm-certs-main
  certbot_data:
    name: fmtm-certbot-data-main

networks:
  fmtm-net:
    name: fmtm-main

services:
  proxy:
    image: "ghcr.io/hotosm/fmtm/proxy:main"
    depends_on:
      api:
        condition: service_started
      certbot:
        condition: service_completed_successfully
      s3:
        condition: service_healthy
      ui:
        condition: service_completed_successfully
      electric:
        condition: service_started
    volumes:
      - fmtm_frontend:/usr/share/nginx/html/fmtm
      - certs:/etc/letsencrypt
      - certbot_data:/var/www/certbot
    environment:
      FMTM_DOMAIN: ${FMTM_DOMAIN}
      FMTM_API_DOMAIN: ${FMTM_API_DOMAIN:-api.${FMTM_DOMAIN}}
      FMTM_S3_DOMAIN: ${FMTM_S3_DOMAIN:-s3.${FMTM_DOMAIN}}
      FMTM_SYNC_DOMAIN: ${FMTM_SYNC_DOMAIN:-sync.${FMTM_DOMAIN}}
    ports:
      - 80:80
      - 443:443
    networks:
      - fmtm-net
    restart: "unless-stopped"

  api:
    image: "ghcr.io/hotosm/fmtm/backend:main"
    volumes:
      - fmtm_logs:/opt/logs
      - fmtm_tiles:/opt/tiles
    depends_on:
      fmtm-db:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
      s3:
        condition: service_healthy
    env_file:
      - .env
    networks:
      - fmtm-net
    restart: "unless-stopped"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/__lbheartbeat__"]
      start_period: 60s
      interval: 10s
      timeout: 5s
      retries: 10
    deploy:
      replicas: ${API_REPLICAS:-4}
      resources:
        limits:
          cpus: "0.9"
          memory: 1500M
        reservations:
          cpus: "0.1"
          memory: 100M

  ui:
    # This service simply builds the frontend to a volume
    # accessible to the proxy, then shuts down
    image: "ghcr.io/hotosm/fmtm/frontend:main"
    build:
      context: src
      dockerfile: Dockerfile.ui.prod
      args:
        APP_VERSION: main
        VITE_API_URL: https://${FMTM_API_DOMAIN:-api.${FMTM_DOMAIN}}
        VITE_SYNC_URL: https://${FMTM_SYNC_DOMAIN:-sync.${FMTM_DOMAIN}}
    volumes:
      - fmtm_frontend:/frontend
    network_mode: none
    restart: "on-failure:2"

  s3:
    image: "docker.io/minio/minio:${MINIO_TAG:-RELEASE.2025-01-20T14-49-07Z}"
    environment:
      MINIO_ROOT_USER: ${S3_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${S3_SECRET_KEY}
      MINIO_VOLUMES: "/mnt/data"
      MINIO_BROWSER: "off"
    volumes:
      - fmtm_data:/mnt/data
    networks:
      - fmtm-net
    command: minio server
    restart: "unless-stopped"
    healthcheck:
      test: timeout 5s bash -c ':> /dev/tcp/127.0.0.1/9000' || exit 1
      interval: 5s
      retries: 3
      start_period: 5s
      timeout: 5s

  fmtm-db:
    image: "postgis/postgis:${POSTGIS_TAG:-14-3.5-alpine}"
    command: -c 'max_connections=300' -c 'wal_level=logical'
    volumes:
      - fmtm_db_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${FMTM_DB_USER}
      - POSTGRES_PASSWORD=${FMTM_DB_PASSWORD}
      - POSTGRES_DB=${FMTM_DB_NAME}
    ports:
      - "5433:5432"
    networks:
      - fmtm-net
    restart: "unless-stopped"
    healthcheck:
      test: pg_isready -U ${FMTM_DB_USER} -d ${FMTM_DB_NAME}
      start_period: 5s
      interval: 10s
      timeout: 5s
      retries: 3

  electric:
    image: "electricsql/electric:${ELECTRIC_TAG:-0.9.3}"
    depends_on:
      fmtm-db:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    environment:
      DATABASE_URL: postgresql://${FMTM_DB_USER}:${FMTM_DB_PASSWORD}@${FMTM_DB_HOST:-fmtm-db}/${FMTM_DB_NAME:-fmtm}?sslmode=disable
      # OTEL_EXPORT: otlp
      # OTLP_ENDPOINT: https://...
      # ELECTRIC_WRITE_TO_PG_MODE: direct_writes
    networks:
      - fmtm-net
    restart: "unless-stopped"

  migrations:
    image: "ghcr.io/hotosm/fmtm/backend:main"
    depends_on:
      fmtm-db:
        condition: service_healthy
      s3:
        condition: service_healthy
    env_file:
      - .env
    networks:
      - fmtm-net
    entrypoint: ["/migrate-entrypoint.sh"]
    restart: "on-failure:2"

  backups:
    image: "ghcr.io/hotosm/fmtm/backend:main"
    depends_on:
      fmtm-db:
        condition: service_healthy
    env_file:
      - .env
    networks:
      - fmtm-net
    entrypoint: ["/backup-entrypoint.sh"]
    restart: "on-failure:2"
    healthcheck:
      test: pg_isready -U ${FMTM_DB_USER} -d ${FMTM_DB_NAME}
      start_period: 5s
      interval: 10s
      timeout: 5s
      retries: 3

  certbot:
    image: "ghcr.io/hotosm/fmtm/proxy:certs-init-main"
    volumes:
      - certs:/etc/letsencrypt
      - certbot_data:/var/www/certbot
    environment:
      FMTM_DOMAIN: ${FMTM_DOMAIN}
      FMTM_API_DOMAIN: ${FMTM_API_DOMAIN:-api.${FMTM_DOMAIN}}
      FMTM_S3_DOMAIN: ${FMTM_S3_DOMAIN:-s3.${FMTM_DOMAIN}}
      FMTM_SYNC_DOMAIN: ${FMTM_SYNC_DOMAIN:-sync.${FMTM_DOMAIN}}
      CERT_EMAIL: ${CERT_EMAIL}
    ports:
      - 80:80
      - 443:443
    networks:
      - fmtm-net
    restart: "on-failure:2"
